package tfg;
import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : NearlyHotel.java
//  @ Date : 19/12/2014
//  @ Author : 
//
//
/*
 * https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=-33.8670522,151.1957362&radius=500&types=food&name=harbour&sensor=false&key=AIzaSyBhmi0Tza5mePpDCBv4F4_OJywxEhD67Ic
 https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=40.420138,-3.704801&radius=500&types=lodging&sensor=false&key=AIzaSyBhmi0Tza5mePpDCBv4F4_OJywxEhD67Ic
 */

public class NearlyHotel {
	private String url;
	private ArrayList<Hotel> hotels;
	public static String line_separator = System.getProperty("line.separator");
	//private String key;
	//private JSONObject json;
	
	
	public NearlyHotel(String url_, String key_, Position position) {
		// TODO Auto-generated constructor stub
		url = url_ 
				 + position.getLatitude() +","
				 +position.getLongitude()
				+"&radius="+ position.getRadius()
				+"&types=lodging"
				+"&sensor=false"
				+ "&key=" + key_;
		hotels = new ArrayList<Hotel>();
	}
	
	/*
	public void SearchHotel(Position position) throws Exception {
		
		 url = url 
				 + position.getLatitude() +","
				 +position.getLongitude()
				+"&radius="+ position.getRadius()
				+"&types=lodging"
				+"&sensor=false"
				+ "&key=" + key; 
		
		 URL urlComplete = new URL(url);
		// URLConnection connection = urlComplete.openConnection();
		
		//String query = URLEncoder.encode(query, "UTF-8");
		// Get the JSON response
		/*	String line;
			StringBuilder builder = new StringBuilder();
			boolean firts = true;
			BufferedReader reader = new BufferedReader(new InputStreamReader(
					connection.getInputStream()));
			while ((line = reader.readLine()) != null) {
				builder.append(line);
			}
			reader.close();

			String response = builder.toString();
			JSONObject json = new JSONObject(response);*/
			
			//json = TestGetJSON.getJSON(urlComplete);
			
			
		//return	parserJsonHotel(json);
	//}
	
	
	
	public String getUrl() {
		return url;
	}
	
	
	
	public void SearchHotel(JSONObject json) throws JSONException {
		
			JSONArray jsonArray = new JSONArray(json.getString("results"));
			System.out.println("\n\njsonArray: " + jsonArray);
			int count = jsonArray.length(); // get totalCount of all jsonObjects
			for(int i=0 ; i< count ; i++){   // iterate through jsonArray 
				JSONObject jsonObject = jsonArray.getJSONObject(i);  // get jsonObject @ i position 
				System.out.println("jsonObject " + i + ": " + jsonObject);
				
				String name = jsonArray.getJSONObject(i).getString("name");
				System.out.println("name: " + name);
				
				String vicinity = jsonArray.getJSONObject(i).getString("vicinity");
				System.out.println("vicinity: " + vicinity);
				
				String lat = TestGetJSON.getJSONObjet(TestGetJSON.getJSONObjet(jsonArray.getJSONObject(i).getString("geometry"), "location"), "lat");
				System.out.println("latitude: " + TestGetJSON.getJSONObjet(TestGetJSON.getJSONObjet(jsonArray.getJSONObject(i).getString("geometry"), "location"), "lat"));
				
				String lng = TestGetJSON.getJSONObjet(TestGetJSON.getJSONObjet(jsonArray.getJSONObject(i).getString("geometry"), "location"), "lng");
				System.out.println("longitude: " + TestGetJSON.getJSONObjet(TestGetJSON.getJSONObjet(jsonArray.getJSONObject(i).getString("geometry"), "location"), "lng"));
				
				Hotel hotel = new Hotel(Double.parseDouble(lat), Double.parseDouble(lng), name );
				hotels.add(hotel);
				System.out.println("-----");
			
			}
			
	}
	
	@Override
	public String toString() {
		// TODO Auto-generated method stub
		
		String string = "";
		if (hotels.isEmpty())
			return "Lista de hoteles vacia";
		
		for (Hotel hotel : hotels) {
			
			string += "------"
					+line_separator
					+hotel.toString();
		}
		return string;
	}

	/*
	private String getJSONObjet(String query, String search) throws JSONException{
		JSONObject jsonObjectN = new JSONObject(query);
		return jsonObjectN.getString(search);
	}*/

}
